apiVersion: v1
kind: Namespace
metadata:
  name: synapse

---

apiVersion: v1
kind: ServiceAccount
metadata:
  name: synapse
  namespace: synapse
  
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: synapse
  namespace: synapse
  annotations:
    traffic.sidecar.istio.io/excludeOutboundIPRanges: 10.96.0.1/32
spec:
  selector:
    matchLabels:
      app: synapse
  template:
    metadata:
      labels:
        app: synapse
        version: '0.1.3'
      annotations:
        traffic.sidecar.istio.io/excludeOutboundIPRanges: 10.96.0.1/32
    spec:
      serviceAccountName: synapse
      containers:
      - name: synapse
        image: informaacr.azurecr.io/synapse/server:latest
        imagePullPolicy: Always
        env:
          - name: KUBERNETES_POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: KUBERNETES_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
                
---

apiVersion: v1
kind: Service
metadata:
  name: synapse
  namespace: synapse
  labels: 
    app: synapse
spec:
  ports:
    - name: http
      port: 42286
      protocol: TCP
    - name: http-2
      port: 41387
      protocol: TCP 
  selector:
    app: synapse
    
---

apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: pod-manager
  namespace: synapse
  labels:
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
rules:
- apiGroups: [""]
  resources: ["pods", "pods/log"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
  
---

apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: synapse
  namespace: synapse
subjects:
  - kind: ServiceAccount
    name: synapse
    apiGroup: ""
roleRef:
  kind: Role
  name: pod-manager
  apiGroup: rbac.authorization.k8s.io
