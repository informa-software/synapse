apiVersion: v1
kind: Namespace
metadata:
  name: synapse

---

apiVersion: v1
kind: ServiceAccount
metadata:
  name: synapse
  namespace: synapse

---

apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: pod-manager
  namespace: synapse
  labels:
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
rules:
- apiGroups: [""]
  resources: ["pods", "pods/log"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
  
---

apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: synapse
  namespace: synapse
subjects:
  - kind: ServiceAccount
    name: synapse
    apiGroup: ""
roleRef:
  kind: Role
  name: pod-manager
  apiGroup: rbac.authorization.k8s.io

---

kind: StorageClass
apiVersion: storage.k8s.io/v1
metadata:
  name: sc-azurefile
provisioner: file.csi.azure.com # replace with "kubernetes.io/azure-file" if aks version is less than 1.21
reclaimPolicy: Retain
allowVolumeExpansion: true
mountOptions:
  - dir_mode=0777
  - file_mode=0777
  - uid=0
  - gid=0
  - mfsymlinks
  - cache=strict
  - actimeo=30
parameters:
  skuName: Standard_LRS
  location: eastus2

---

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongo
  namespace: synapse
spec:
  selector:
    matchLabels:
      app: mongo
  serviceName: mongodb
  replicas: 3
  template:
    metadata:
      labels:
        app: mongo
    spec:
      terminationGracePeriodSeconds: 10
      containers:
        - name: mongo
          image: mongo:latest
          command:
            - mongod
            - "--bind_ip_all"
            - "--replSet"
            - rs0
          ports:
            - containerPort: 27017
          volumeMounts:
            - name: vol-azurefile-mongo
              mountPath: /data/db
  volumeClaimTemplates:
    - metadata:
        name: vol-azurefile-mongo
      spec:
        storageClassName: sc-azurefile
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi

---

apiVersion: v1
kind: Service
metadata:
  name: mongodb
  namespace: synapse
spec:
  ports:
    - name: tcp
      port: 27017
      protocol: TCP
  clusterIP: None
  selector:
    app: mongo

---

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: event-store
  namespace: synapse
spec:
  selector:
    matchLabels:
      app: event-store
  serviceName: event-store
  replicas: 3
  template:
    metadata:
      labels:
        app: event-store
    spec:
      terminationGracePeriodSeconds: 10
      containers:
        - name: event-store
          image: eventstore/eventstore:latest
          env:
            - name: EVENTSTORE_CLUSTER_SIZE
              value: '3'
            - name: EVENTSTORE_DISCOVER_VIA_DNS
              value: 'true'
            - name: EVENTSTORE_CLUSTER_DNS
              value: 'event-store'
            - name: EVENTSTORE_RUN_PROJECTIONS
              value: All
            - name: EVENTSTORE_START_STANDARD_PROJECTIONS
              value: 'true'
            - name: EVENTSTORE_EXT_TCP_PORT
              value: '1113'
            - name: EVENTSTORE_HTTP_PORT
              value: '2113'
            - name: EVENTSTORE_INSECURE
              value: 'true'
            - name: EVENTSTORE_ENABLE_EXTERNAL_TCP
              value: 'true'
            - name: EVENTSTORE_ENABLE_ATOM_PUB_OVER_HTTP
              value: 'true'
          ports: 
            - name: eventstore-web
              containerPort: 2113
            - name: eventstore-tcp
              containerPort: 1113
          volumeMounts:
            - name: vol-azurefile-eventstore
              mountPath: /var/lib/eventstore
  volumeClaimTemplates:
    - metadata:
        name: vol-azurefile-eventstore
      spec:
        storageClassName: sc-azurefile
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi

---

apiVersion: v1
kind: Service
metadata:
  name: event-store
  namespace: synapse
  labels: 
    app: event-store
spec:
  clusterIP: None
  ports:
    - name: web
      port: 2113
      protocol: TCP
    - name: tcp
      port: 1113
      protocol: TCP
  selector:
    app: event-store

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: synapse
  namespace: synapse
  annotations:
    traffic.sidecar.istio.io/excludeOutboundIPRanges: 10.96.0.1/32
spec:
  selector:
    matchLabels:
      app: synapse
  template:
    metadata:
      labels:
        app: synapse
        version: '0.1.3'
      annotations:
        traffic.sidecar.istio.io/excludeOutboundIPRanges: 10.96.0.1/32
    spec:
      serviceAccountName: synapse
      containers:
        - name: synapse
          image: informaacr.azurecr.io/synapse/server:latest
          imagePullPolicy: Always
          env:
            - name: KUBERNETES_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: KUBERNETES_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: ASPNETCORE_ENVIRONMENT
              value: Development
            - name: SYNAPSE_SKIP_CERTIFICATE_VALIDATION
              value: "true"
            - name: SYNAPSE_PERSISTENCE_WRITEMODEL_DEFAULT_REPOSITORY
              value: EventStore
            - name: SYNAPSE_PERSISTENCE_READMODEL_DEFAULT_REPOSITORY
              value: MongoDB
            - name: CONNECTIONSTRINGS__EVENTSTORE
              value: "esdb://event-store:2113?tls=false"
            - name: CONNECTIONSTRINGS__MONGODB
              value: mongodb://mongo-0.mongodb:27017,mongo-1.mongodb:27017,mongo-2.mongodb:27017?replicaSet=rs0

---

apiVersion: v1
kind: Service
metadata:
  name: synapse
  namespace: synapse
  labels: 
    app: synapse
spec:
  type: LoadBalancer
  ports:
    - name: http
      port: 42286
      protocol: TCP
    - name: http-2
      port: 41387
      protocol: TCP 
  selector:
    app: synapse